<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN" "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8" />
    <property name="severity" value="warning" />
    <property name="fileExtensions" value="java, properties, xml" />

    <!-- Excludes -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$" />
    </module>

    <!-- Suppressions for Spring Boot specific patterns -->
    <module name="SuppressionFilter">
        <property name="file" value="${org.checkstyle.sun.suppressionfilter.config}"
            default="checkstyle-suppressions.xml" />
        <property name="optional" value="true" />
    </module>

    <!-- File length -->
    <module name="FileLength">
        <property name="max" value="2000" />
    </module>

    <!-- Line length -->
    <module name="LineLength">
        <property name="fileExtensions" value="java" />
        <property name="max" value="120" />
        <property name="ignorePattern"
            value="^package.*|^import.*|a href|href|http://|https://|ftp://" />
    </module>

    <!-- Whitespace -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true" />
    </module>

    <module name="TreeWalker">
        <!-- Imports -->
        <module name="AvoidStarImport" />
        <module name="IllegalImport" />
        <module name="RedundantImport" />
        <module name="UnusedImports">
            <property name="processJavadoc" value="false" />
        </module>

        <!-- Import order -->
        <module name="ImportOrder">
            <property name="groups" value="/^java\./,javax,org.springframework,org,com" />
            <property name="ordered" value="true" />
            <property name="separated" value="true" />
            <property name="option" value="bottom" />
            <property name="sortStaticImportsAlphabetically" value="true" />
        </module>

        <!-- Naming Conventions -->
        <module name="ConstantName" />
        <module name="LocalFinalVariableName" />
        <module name="LocalVariableName" />
        <module name="MemberName" />
        <module name="MethodName" />
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
        </module>
        <module name="ParameterName" />
        <module name="StaticVariableName" />
        <module name="TypeName" />

        <!-- Size Violations -->
        <module name="MethodLength">
            <property name="max" value="150" />
        </module>
        <module name="ParameterNumber">
            <property name="max" value="8" />
            <property name="ignoreOverriddenMethods" value="true" />
        </module>

        <!-- Whitespace -->
        <module name="EmptyForIteratorPad" />
        <module name="GenericWhitespace" />
        <module name="MethodParamPad" />
        <module name="NoWhitespaceAfter" />
        <module name="NoWhitespaceBefore" />
        <module name="OperatorWrap" />
        <module name="ParenPad" />
        <module name="TypecastParenPad" />
        <module name="WhitespaceAfter" />
        <module name="WhitespaceAround" />

        <!-- Modifier Checks -->
        <module name="ModifierOrder" />
        <module name="RedundantModifier" />

        <!-- Blocks -->
        <module name="AvoidNestedBlocks" />
        <module name="EmptyBlock">
            <property name="option" value="TEXT" />
            <property name="tokens"
                value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH" />
        </module>
        <module name="LeftCurly" />
        <module name="NeedBraces" />
        <module name="RightCurly" />

        <!-- Common Coding Problems -->
        <module name="EmptyStatement" />
        <module name="EqualsHashCode" />
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true" />
            <property name="ignoreSetter" value="true" />
            <property name="setterCanReturnItsClass" value="true" />
        </module>
        <module name="IllegalInstantiation" />
        <module name="InnerAssignment" />
        <module name="MissingSwitchDefault" />
        <module name="MultipleVariableDeclarations" />
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />

        <!-- Class Design -->
        <module name="FinalClass" />
        <module name="InterfaceIsType" />
        <module name="VisibilityModifier">
            <!-- Allow public fields for Spring Boot configuration properties -->
            <property name="protectedAllowed" value="true" />
            <property name="publicMemberPattern" value="^[a-z][a-zA-Z0-9]*$" />
        </module>

        <!-- Miscellaneous -->
        <module name="ArrayTypeStyle" />
        <module name="UpperEll" />

        <!-- Spring Boot specific relaxations -->
        <!-- Allow long parameter lists for constructors (common in Spring Boot) -->
        <module name="ParameterNumber">
            <property name="ignoreOverriddenMethods" value="true" />
            <property name="tokens" value="METHOD_DEF" />
        </module>

        <!-- Relaxed javadoc requirements for Spring Boot -->
        <module name="MissingJavadocMethod">
            <property name="severity" value="ignore" />
        </module>

        <module name="MissingJavadocType">
            <property name="severity" value="ignore" />
        </module>

    </module>
</module>
